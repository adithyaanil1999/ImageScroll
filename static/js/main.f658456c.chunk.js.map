{"version":3,"sources":["static/unsplashobj.js","components/ImageViewer.js","components/Imagegrid.js","components/ImageScroll.js","components/Header.js","components/App.js","index.js"],"names":["unsplash","Unsplash","accessKey","ImageViewer","props","imgArr","id","elementindex","image","leftImage","rightImage","imageJSX","this","imgArray","length","slice","concat","i","forEach","element","src","setState","buildImageArray","findImage","console","log","dir","className","onClick","changeImage","bind","class","React","Component","ImageGrid","result","first","openImgBool","didImageViwerOpen","obj","key","size","hasOwnProperty","push","openImg","alt","state","fullArr","ImageScroll","pageno","grid","pageNo","photos","listPhotos","toJson","callAPI","that","document","getElementById","Math","ceil","scrollHeight","scrollTop","clientHeight","getImages","result_new","full_array","handleScroll","addEventListener","ImageScrollHeader","App","reactDom","render"],"mappings":"kOASeA,EAJE,I,OAAIC,GAAS,CAC5BC,UAJqB,gD,QC6ERC,E,kDA1EX,WAAYC,GAAO,IAAD,8BACd,cAAMA,IACDC,OAAS,GACd,EAAKC,GAAK,GACV,EAAKC,aAAe,EACpB,EAAKC,MAAQ,KACb,EAAKC,UAAY,KACjB,EAAKC,WAAa,KAClB,EAAKC,SAAW,KARF,E,8DAYXC,KAAKR,MAAMS,SAASC,OAAO,GAC1BF,KAAKP,OAASO,KAAKR,MAAMS,SAEzBD,KAAKP,OAASO,KAAKR,MAAMS,SAASE,MAAM,EAAE,IAAIC,OAAOJ,KAAKR,MAAMS,SAASE,MAAM,O,kCAG3E,IAAD,OACHE,EAAI,EACRL,KAAKP,OAAOa,SAAQ,SAAAC,GACbA,EAAQb,KAAO,EAAKA,KACnB,EAAKE,MAAQW,EACb,EAAKZ,aAAeU,GAExBA,GAAG,KAEPL,KAAKD,SAAW,qBAAKS,IAAKR,KAAKJ,MAAL,YAC1BI,KAAKS,SAAS,M,0CAGdT,KAAKN,GAAKM,KAAKR,MAAME,GACrBM,KAAKU,kBACLV,KAAKW,YACLC,QAAQC,IAAIb,KAAKJ,MAAL,a,kCAIJkB,GACG,SAARA,EACuB,GAAnBd,KAAKL,eACJK,KAAKL,cAAc,EACnBK,KAAKJ,MAAQI,KAAKP,OAAOO,KAAKL,cAC9BK,KAAKD,SAAW,qBAAKS,IAAKR,KAAKJ,MAAL,YAC1BI,KAAKS,SAAS,KAGfT,KAAKL,aAAaK,KAAKP,OAAOS,SAC7BF,KAAKL,cAAc,EACnBK,KAAKJ,MAAQI,KAAKP,OAAOO,KAAKL,cAC9BK,KAAKD,SAAW,qBAAKS,IAAKR,KAAKJ,MAAL,YAC1BI,KAAKS,SAAS,O,+BAOtB,OACI,sBAAKM,UAAU,eAAf,UACI,qBAAKA,UAAU,kBAAf,SACI,mBAAGC,QAAShB,KAAKiB,YAAYC,KAAKlB,KAAK,QAASmB,MAAM,wBAE1D,qBAAKJ,UAAU,aAAf,SACKf,KAAKD,WAEV,qBAAKgB,UAAU,kBAAf,SACI,mBAAGC,QAAShB,KAAKiB,YAAYC,KAAKlB,KAAK,SAAUmB,MAAM,gC,GArEjDC,IAAMC,WCwEjBC,E,kDArEX,WAAY9B,GAAO,IAAD,8BACd,cAAMA,IACD+B,OAAS,GACd,EAAKC,MAAQ,EACb,EAAK9B,GAAK,GACV,EAAK+B,aAAc,EACnB,EAAKC,kBAAoB,EANX,E,oDAQVC,GACJ,IAAcC,EAAVC,EAAO,EACX,IAAKD,KAAOD,EACJA,EAAIG,eAAeF,IAAMC,IAEjC,OAAOA,I,0CAKP,IAAI,IAAIxB,EAAI,EAAIA,EAAI,GAAKA,IACrBL,KAAKuB,OAAOQ,KAAK,qBAAKhB,UAAU,YAAf,SAA2B,qBAAKC,QAAShB,KAAKgC,QAAQd,KAAKlB,KAAKA,KAAKR,MAAMC,OAAOY,GAAlB,IAA8D4B,IAAKjC,KAAKR,MAAMC,OAAOY,GAAlB,gBAAyCG,IAAKR,KAAKR,MAAMC,OAAOY,GAAlB,YAA/EL,KAAKR,MAAMC,OAAOY,GAAlB,OAEvHL,KAAKS,SAAL,eAAkBT,KAAKR,U,8BAGnBE,GACI,OAALA,IACCM,KAAKN,GAAKA,GAEdM,KAAKS,SAAS,IACdT,KAAKyB,aAAezB,KAAKyB,YACzBzB,KAAK0B,mBAAmB,I,2CAGxB,GAAgB,IAAb1B,KAAKwB,MACJxB,KAAKwB,MAAM,OAEX,GAA4B,IAAzBxB,KAAK0B,kBACJ,IAAI,IAAIrB,EAAI,EAAIA,EAAIL,KAAKkC,MAAMzC,OAAOS,OAASG,IAC3CL,KAAKuB,OAAOQ,KAAK,qBAAMhB,UAAU,YAAhB,SAA4B,qBAAMC,QAAShB,KAAKgC,QAAQd,KAAKlB,KAAKA,KAAKR,MAAMC,OAAOY,GAAlB,IAA8D4B,IAAKjC,KAAKR,MAAMC,OAAOY,GAAlB,gBAAyCG,IAAKR,KAAKR,MAAMC,OAAOY,GAAlB,YAA/EL,KAAKR,MAAMC,OAAOY,GAAlB,YAGzHL,KAAK0B,kBAAkB,I,+BAQ/B,OACI,qBAAKX,UAAU,wBAAf,SACI,qBAAKrB,GAAG,cAAcqB,UAAU,oBAAhC,SAEIf,KAAKyB,YACD,sBAAKV,UAAU,kBAAf,UACI,qBAAKA,UAAU,iBAAf,SACI,mBAAGC,QAAShB,KAAKgC,QAAQd,KAAKlB,KAAK,MAAOmB,MAAM,0BAErD,cAAC,EAAD,CAAYzB,GAAIM,KAAKN,GAAIO,SAAUD,KAAKR,MAAM2C,aAEhDnC,KAAKuB,e,GA9DNH,IAAMC,WCqEfe,E,kDAnEX,WAAY5C,GAAO,IAAD,8BACd,cAAMA,IACD6C,OAAS,EACd,EAAKH,MAAQ1C,EACb,EAAK8C,KAAO,KACZ,EAAKrC,SAAW,GAChB,EAAKuB,MAAQ,EANC,E,6FAWJe,G,uFACSnD,EAASoD,OAAOC,WAAWF,EAAQ,GAAI,U,cAAtDhB,E,gBACWmB,iBAAOnB,G,cAAtBA,E,yBACOA,G,2KAIKgB,G,uFACOvC,KAAK2C,QAAQJ,G,cAA5BhB,E,yBACGA,G,mQAGHqB,EAAO5C,KACLO,EAAUsC,SAASC,eAAe,eACpCC,KAAKC,KAAKzC,EAAQ0C,aAAe1C,EAAQ2C,aAAe3C,EAAQ4C,a,uBAChEP,EAAKP,QAAQ,E,SAEUO,EAAKQ,UAAUpD,KAAKqC,Q,OAAvCgB,E,OACJrD,KAAKC,SAAWD,KAAKC,SAASG,OAAOiD,GACrB,IAAbrD,KAAKwB,OACJoB,EAAKnC,SAAS,CAAChB,OAAO4D,EAAWC,WAAWtD,KAAKC,WACjDD,KAAKuD,eACLvD,KAAKwB,OAAO,GAEhBoB,EAAKnC,SAAS,CAAChB,OAAO4D,EAAWC,WAAWtD,KAAKC,W,gRAKlCD,KAAKoD,UAAUpD,KAAKqC,Q,OAAnCd,E,OACJvB,KAAKC,SAAWD,KAAKC,SAASG,OAAOmB,GACrCvB,KAAKS,SAAS,CAAChB,OAAO8B,EAAO+B,WAAWtD,KAAKC,WAC7C4C,SAASC,eAAe,eAAeU,iBAAiB,SAASxD,KAAKuD,aAAarC,KAAKlB,O,mLAUxF,IAAIsC,EAMJ,OAJIA,EADDtC,KAAKkC,MAAMzC,OACH,cAAC,EAAD,CAAW0C,QAASnC,KAAKkC,MAAMoB,WAAY7D,OAAQO,KAAKkC,MAAMzC,SAG9D,KAEP,qBAAKsB,UAAU,yBAAf,SACKuB,Q,GA/DSlB,IAAMC,WCWjBoC,E,uKARP,OACI,qBAAK1C,UAAU,mBAAf,SACI,oD,GANgBK,IAAMC,WCkBvBqC,E,kLAZP9C,QAAQC,IAAI,kB,+BAGZ,OACI,sBAAKnB,GAAG,YAAYqB,UAAU,kBAA9B,UACI,cAAC,EAAD,IACA,cAAC,EAAD,W,GAREK,IAAMC,WCHxBsC,IAASC,OACL,cAAC,EAAD,IACAf,SAASC,eAAe,W","file":"static/js/main.f658456c.chunk.js","sourcesContent":["// ES Modules syntax\nimport Unsplash, { toJson } from 'unsplash-js';\nconst APP_ACCESS_KEY = 'FPkmE2Kf0FYr7etEUgRbzsSm2vVfYeDZtwuNz19EXg0';\n\n\nconst unsplash = new Unsplash({\n  accessKey: APP_ACCESS_KEY,\n});\n\nexport default unsplash;","import React from 'react';\n\n\nclass ImageViewer extends React.Component{\n     \n    constructor(props){\n        super(props);\n        this.imgArr = [];\n        this.id = '';\n        this.elementindex = 0\n        this.image = null;\n        this.leftImage = null;\n        this.rightImage = null;\n        this.imageJSX = null;\n       \n    }\n    buildImageArray(){\n        if(this.props.imgArray.length<12){\n            this.imgArr = this.props.imgArray;\n        }else{\n            this.imgArr = this.props.imgArray.slice(0,12).concat(this.props.imgArray.slice(24))\n        }\n    }\n    findImage(){\n        let i = 0;\n        this.imgArr.forEach(element => {\n            if(element.id === this.id){\n                this.image = element;\n                this.elementindex = i;\n            }\n            i+=1;\n        });\n        this.imageJSX = <img src={this.image['urls']['full']}></img>\n        this.setState({})\n    }\n    componentDidMount(){\n        this.id = this.props.id;\n        this.buildImageArray();\n        this.findImage();\n        console.log(this.image['urls']['full'])\n        \n    }\n\n    changeImage(dir){\n        if(dir === 'left'){\n            if(this.elementindex!=0){\n                this.elementindex-=1;\n                this.image = this.imgArr[this.elementindex];\n                this.imageJSX = <img src={this.image['urls']['full']}></img>\n                this.setState({})\n            }\n        }else{\n            if(this.elementindex<this.imgArr.length){\n                this.elementindex+=1;\n                this.image = this.imgArr[this.elementindex];\n                this.imageJSX = <img src={this.image['urls']['full']}></img>\n                this.setState({})\n            }\n        }\n        \n    }\n\n    render(){\n        return(\n            <div className=\"img-view-box\">\n                <div className=\"img-button-cont\">\n                    <i onClick={this.changeImage.bind(this,'left')} class=\"fas fa-arrow-left\"></i>\n                </div>\n                <div className=\"img-viewer\">\n                    {this.imageJSX}\n                </div>\n                <div className=\"img-button-cont\">\n                    <i onClick={this.changeImage.bind(this,'right')} class=\"fas fa-arrow-right\"></i>\n                </div>\n            </div>\n        )   \n    }\n}\n\nexport default ImageViewer;","import React from 'react';\nimport ImageViwer from './ImageViewer'\n\n\nclass ImageGrid extends React.Component{\n     \n    constructor(props){\n        super(props);\n        this.result = [];\n        this.first = 0;\n        this.id = '';\n        this.openImgBool = false;\n        this.didImageViwerOpen = 0;\n    }\n    getsize(obj) {\n        var size = 0, key;\n        for (key in obj) {\n            if (obj.hasOwnProperty(key)) size++;\n        }\n        return size;\n    };\n\n   \n    componentDidMount(){\n        for(var i = 0 ; i < 12 ; i++){\n            this.result.push(<div className=\"image-box\"><img onClick={this.openImg.bind(this,this.props.imgArr[i]['id'])} key={this.props.imgArr[i]['id']} alt={this.props.imgArr[i]['alt_description']} src={this.props.imgArr[i]['urls']['small'] } ></img></div>) \n        }\n        this.setState({...this.props});\n    }\n\n    openImg(id){\n        if(id!==null){\n            this.id = id;\n        }\n        this.setState({})\n        this.openImgBool = !this.openImgBool;\n        this.didImageViwerOpen+=1        \n    }\n    componentDidUpdate(){\n        if(this.first===0){\n            this.first=1;\n        }else{\n            if(this.didImageViwerOpen===0){\n                for(var i = 0 ; i < this.state.imgArr.length ; i++){\n                    this.result.push(<div  className=\"image-box\"><img  onClick={this.openImg.bind(this,this.props.imgArr[i]['id'])} key={this.props.imgArr[i]['id']} alt={this.props.imgArr[i]['alt_description']} src={this.props.imgArr[i]['urls']['small']}  ></img></div>) \n                }\n            }else{\n                this.didImageViwerOpen=0        \n            }\n            \n        }\n        \n    }\n\n    render(){\n        return(\n            <div className=\"grid-scroll-container\">\n                <div id=\"scroll-cont\" className=\"image-scroll-grid\">\n                    {\n                    this.openImgBool ? \n                        <div className=\"image-view-cont\" >\n                            <div className=\"close-btn-cont\">\n                                <i onClick={this.openImg.bind(this,null)} class=\"fas fa-times-circle\"></i>\n                            </div>\n                           <ImageViwer id={this.id} imgArray={this.props.fullArr}/>\n                        </div>\n                        :this.result\n                    }\n                </div>\n             \n            </div>\n        )   \n    }\n}\n\nexport default ImageGrid;","import React from 'react';\nimport unsplash from '../static/unsplashobj';\nimport ImageGrid from './Imagegrid';\nimport { toJson } from 'unsplash-js';\nclass ImageScroll extends React.Component{\n     \n    constructor(props){\n        super(props);\n        this.pageno = 1;\n        this.state = props;\n        this.grid = null;\n        this.imgArray = [];\n        this.first = 0;\n\n        \n    }\n\n    async callAPI(pageNo){\n        let result = await unsplash.photos.listPhotos(pageNo, 12, \"latest\")\n        result = await toJson(result);\n        return result;\n\n    }\n    \n    async getImages(pageNo){\n        let result = await this.callAPI(pageNo);\n        return result;\n    }\n    async handleScroll(){\n        let that = this;\n        const element = document.getElementById('scroll-cont');\n        if( Math.ceil(element.scrollHeight - element.scrollTop) === element.clientHeight){\n            that.pageno+=1;\n        \n            let result_new = await that.getImages(this.pageno);\n            this.imgArray = this.imgArray.concat(result_new);\n            if(this.first===0){\n                that.setState({imgArr:result_new,full_array:this.imgArray});\n                this.handleScroll();\n                this.first+=1\n            }else\n            that.setState({imgArr:result_new,full_array:this.imgArray});\n        }\n    }\n\n    async componentDidMount(){\n        let result = await this.getImages(this.pageno);\n        this.imgArray = this.imgArray.concat(result);\n        this.setState({imgArr:result,full_array:this.imgArray});\n        document.getElementById('scroll-cont').addEventListener(\"scroll\",this.handleScroll.bind(this));\n        \n    }\n\n    componentDidUpdate(){\n        // console.log(this.imgArray)\n    }\n    \n\n    render(){\n        let grid;\n        if(this.state.imgArr){\n            grid = <ImageGrid fullArr={this.state.full_array} imgArr={this.state.imgArr}/>\n        }\n        else\n            grid = null\n        return(\n            <div className=\"image-scroll-container\">\n                {grid}\n            </div>\n        )   \n    }\n}\n\nexport default ImageScroll;","import React from 'react';\n\n\nclass ImageScrollHeader extends React.Component{\n    \n   \n    render(){\n        return(\n            <div className=\"header-container\">\n                <h2>Image Scroll</h2>\n            </div>\n        )   \n    }\n}\n\nexport default ImageScrollHeader;","import React from 'react';\nimport ImageScroll from './ImageScroll';\nimport ImageScrollHeader from './Header';\n// function getCook(cookiename) {\n//     var cookiestring = RegExp(\"\" + cookiename + \"[^;]+\").exec(document.cookie);\n//     return decodeURIComponent(!!cookiestring ? cookiestring.toString().replace(/^[^=]+./, \"\") : \"\");\n// }\nclass App extends React.Component{\n    componentDidMount(){\n        console.log('APP started!')\n    }\n    render(){\n        return (\n            <div id=\"main-cont\" className=\"main-containter\">\n                <ImageScrollHeader/>\n                <ImageScroll/>\n            </div>\n        )\n    }\n}\n\nexport default App;\n","import React from 'react';\nimport reactDom from 'react-dom';\nimport App from './components/App';\n\nreactDom.render(\n    <App />,\n    document.getElementById('root')\n)"],"sourceRoot":""}